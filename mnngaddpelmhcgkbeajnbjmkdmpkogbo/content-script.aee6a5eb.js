(()=>{const e=e=>{const n=document.createElement("div");n.classList.add("scan-translator-error-message"),Object.assign(n.style,{display:"flex",alignItems:"center",gap:"8px",position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",padding:"12px 24px",background:"rgba(193, 22, 22, 1)",color:"white",fontSize:"18px",textAlign:"center",borderRadius:"6px",zIndex:t()+1});const a=document.createElement("p");a.innerHTML=e;const o=document.createElement("button");throw o.innerHTML='<svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="16px" width="16px" xmlns="http://www.w3.org/2000/svg"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>',n.appendChild(a),n.appendChild(o),document.body.appendChild(n),o.addEventListener("click",(()=>{n.remove()})),new Error("An error occurred")},n=()=>{const e=document.querySelector(".scan-translator-panel-root").shadowRoot,n=e?.querySelector(".js-translate-page"),t=e?.querySelector(".js-translate-all-images");document.querySelector(".scan-translator-overlay-loader")?.remove(),n?.classList.remove("disable"),t?.classList.remove("disable")},t=()=>Math.max(...Array.from(document.querySelectorAll("body *"),(e=>parseFloat(window.getComputedStyle(e).zIndex))).filter((e=>!Number.isNaN(e))),0),a=({clientHeight:e,scrollHeight:n})=>n>e,o=({element:e,elements:n,minSize:t=14,maxSize:o=22,step:s=1,unit:r="px"})=>{(n||[e]).forEach((e=>{let n=t,l=!1;const i=e.parentNode;for(;!l&&n<o;)e.style.fontSize=`${n}${r}`,l=a(i),l||(n+=s);e.style.fontSize=`${n-s}${r}`}))},s=e=>{let n=0,t=0,a=0,o=0;e.onmousedown=function(e){(e=e||window.event).preventDefault(),a=e.clientX,o=e.clientY,document.onmouseup=r,document.onmousemove=s};const s=s=>{(s=s||window.event).preventDefault(),n=a-s.clientX,t=o-s.clientY,a=s.clientX,o=s.clientY,e.style.top=e.offsetTop-t+"px",e.style.left=e.offsetLeft-n+"px"},r=()=>{document.onmouseup=null,document.onmousemove=null}};let r=null;const l=()=>{if(r)return r;const e=i(),n=c(),t=d(),a=(new Date).getTimezoneOffset();return r=btoa(`${e}-${n}-${t}-${a}`),r},i=()=>{const e=new OffscreenCanvas(0,0).getContext("webgl");if(!e)return"none";const n=e.getExtension("WEBGL_debug_renderer_info");return n?e.getParameter(n.UNMASKED_RENDERER_WEBGL):"unknown"},c=()=>{const e=navigator?.hardwareConcurrency;return`${e}-${navigator.deviceMemory}`},d=()=>{const e=navigator.connection?.type,n=navigator.connection?.rtt,t=navigator.connection?.downlinkMax,a=navigator.connection?.effectiveType,o=navigator.connection?.saveData;return`${e}-${n}-${t}-${a}-${o}`},p={NO_TEXT_FOUND:'No text was found in this image or this site prevents us from retrieving the image. Use your <a href="https://scan-translator.com/upload" target="_blank">Upload Tool</a> instead',SITE_NOT_SUPPORTED:'This website is not supported, Use our <a href="https://scan-translator.com/upload" target="_blank">Upload Tool</a> to translate manually your images',GLOBAL:"An error has occurred, please try again later or refresh the page. If the error is still present, send us a message",LIMIT_EXCEEDED:'Sorry, you have exceeded your weekly limit of 20 free credits. Please upgrade to <a href="https://scantranslator.gumroad.com/l/scan-translator" target="_blank">pro</a> or try again in 1 week.'},u={HITOMI:"hitomi.la"},m=[{name:"Albanian",value:"SQ"},{name:"Arabic",value:"AR"},{name:"Armenian",value:"HY"},{name:"Belarusian",value:"BE"},{name:"Bosnian",value:"BS"},{name:"Bulgarian",value:"BG"},{name:"Burmese",value:"MY"},{name:"Chinese (simplified)",value:"ZH"},{name:"Croatian",value:"HR"},{name:"Czech",value:"CS"},{name:"Danish",value:"DA"},{name:"Dutch",value:"NL"},{name:"English (American)",value:"EN-US"},{name:"English (British)",value:"EN-GB"},{name:"Estonian",value:"ET"},{name:"Finnish",value:"FI"},{name:"French",value:"FR"},{name:"Georgian",value:"KA"},{name:"German",value:"DE"},{name:"Greek",value:"EL"},{name:"Hebrew",value:"HE"},{name:"Hindi",value:"HI"},{name:"Hungarian",value:"HU"},{name:"Icelandic",value:"IS"},{name:"Indonesian",value:"ID"},{name:"Italian",value:"IT"},{name:"Japanese",value:"JA"},{name:"Korean",value:"KO"},{name:"Kurdish",value:"KU"},{name:"Lao",value:"LO"},{name:"Latvian",value:"LV"},{name:"Lithuanian",value:"LT"},{name:"Luxembourgish",value:"LB"},{name:"Macedonian",value:"MK"},{name:"Malagasy",value:"MG"},{name:"Malay",value:"MS"},{name:"Maltese",value:"MT"},{name:"Mongolian",value:"MN"},{name:"Nepali",value:"NE"},{name:"Norwegian",value:"NO"},{name:"Persian",value:"FA"},{name:"Polish",value:"PL"},{name:"Portuguese (Brazilian)",value:"PT-BR"},{name:"Portuguese (excluding Brazilian)",value:"PT-PT"},{name:"Romanian",value:"RO"},{name:"Russian",value:"RU"},{name:"Slovak",value:"SK"},{name:"Slovenian",value:"SL"},{name:"Somali",value:"SO"},{name:"Spanish",value:"ES"},{name:"Sundanese",value:"SU"},{name:"Swedish",value:"SV"},{name:"Thai",value:"TH"},{name:"Turkish",value:"TR"},{name:"Turkmen",value:"TK"},{name:"Ukrainian",value:"UK"},{name:"Uzbek",value:"UZ"},{name:"Vietnamese",value:"VI"},{name:"Welsh",value:"CY"},{name:"Yiddish",value:"YI"}],g=chrome.runtime.getManifest().version;let h,v,f="EN-US",w=null,y=null;const b=()=>{const e=document.createElement("div");e.classList.add("scan-translator-panel-root"),document.body.appendChild(e)},x=async e=>{const{scanTranslatorTranslatePageEvent:n,licenseKeyPopupEvent:t,scanTranslatorTargetLangEvent:a,scanTranslatorPanelEvent:o,resetOverlayEvent:s,storeLicenseKey:r,scanTranslatorCustomFontSize:l}=e;l&&(w=l,H(l)),"show"===o&&L("show"),"hide"===o&&L("hide"),r&&localStorage.setItem("licenseKeyForLandingPage",y||await R("licenseKeyLocalStorage")),s&&E(),a&&C(a),t&&S(t),n&&(S(t),A())},L=e=>{"complete"===document.readyState?"show"===e?T(f):_():window.addEventListener("load",(()=>{"show"===e?T(f):_()}))},C=async e=>{f=e;const n=document.querySelector(".scan-translator-panel-root")?.shadowRoot;n&&(n.querySelector(".js-panel-translated-to-select").value=e)},S=e=>{chrome.storage.local.set({licenseKeyLocalStorage:e}),y=e},E=()=>{const e=document.querySelector(".scan-translator-overlay-wrapper");if(e){e.classList.remove("scan-translator-overlay-wrapper");const n=e.querySelectorAll(".scan-translator-overlay");n&&n.forEach((e=>{e.remove()}))}},T=async e=>{if(!document.querySelector(".scan-translator-panel-root")){const e=document.createElement("div");e.classList.add("scan-translator-panel-root"),document.body.appendChild(e)}if(h=document.querySelector(".scan-translator-panel-root"),!h.shadowRoot){v=h.attachShadow({mode:"open"});const e=document.createElement("div");e.className="shadow-root-class",e.innerHTML='\n  \n<style>\np {\n  margin: 0;\n  display: flex;\n}\n\n.shadow-root-class {\n  display: flex;\n  align-items: flex-start;\n  font-family: \'Source Sans Pro\', sans-serif;\n  font-size: 16px;\n}\n\n/* ================ HEADER ========== */\n.scan-translator-panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.remaining-request-container {\n  color: white;\n  display: flex;\n  align-items: center;\n  align-items: center;\n  gap: 8px;\n}\n\n.tooltip__content, .tooltip__version__content{\n  display: none;\n  position: absolute;\n  left: 22px;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #2D2F4B;\n  font-size: 14px;\n  width: 210px;\n  padding: 7px;\n  text-align: center;\n  border-radius: 5px;\n  z-index: 10;\n}\n\n.tooltip__version__content {\n  left: 100px;\n}\n\n.tooltip__content p, .tooltip__version__content p {\n  margin: 0;\n  justify-content: center;\n  color: white;\n}\n\n.tooltip__version:hover .tooltip__version__content {\n  display: block;\n}\n\n.info-bubble:hover + .tooltip__content {\n  display: block;\n}\n\n.tooltip, .tooltip__version {\n  position: relative;\n  cursor: pointer;\n  display: flex;\n}\n\n.scan-translator-panel-link {\n  color: white;\n  margin-bottom: 12px;\n  display: flex;\n}\n\n.scan-translator-panel-version-container {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  border-radius: 26px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  cursor: pointer;\n  color: white;\n  gap: 4px;\n  text-decoration: none;\n}\n\n.scan-translator--update {\n  border: 2px solid #d07878;\n}\n\n/* ================ BUTTON ========== */\n.scan-translator-panel-btn-toggle {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 9px;\n  width: 100%;\n  border-radius: 4px;\n  appearance: none;\n  color: white;\n  padding: 16px;\n  background: linear-gradient(130.47deg, #4147A9 24.87%, #5B4696 73.02%);\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n  border: solid 1px #2D304B;\n}\n\n.scan-translator-panel-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 9px;\n  width: 100%;\n  border-radius: 4px;\n  appearance: none;\n  color: white;\n  padding: 16px;\n  background: linear-gradient(130.47deg, #4147A9 24.87%, #5B4696 73.02%);\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n}\n\n.scan-translator-panel-btn-default {\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.scan-translator-panel-btn-default svg, .scan-translator-panel-btn-default div  {\n  display: none;\n}\n/* ================ BUTTON ========== */\n\n.scan-translator-panel-radial-gradient {\n  height: 1px;\n  background: radial-gradient(50% 50% at 50% 50%, rgba(255, 255, 255, 0.2) 32.81%, rgba(255, 255, 255, 0) 100%, rgba(255, 255, 255, 0.2) 100%);\n  width: 50%;\n  margin: 0 auto;\n  margin-bottom: 16px;\n}\n\n.disable {\n  background: gray;\n  cursor: not-allowed;\n}\n\n.scan-translator-panel {\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  background: linear-gradient(180deg, #1A1D3E 17.19%, #000211 100%);\n  padding: 16px;\n}\n\n.scan-translator-panel-toggle {\n  padding: 15px 10px;\n  margin-top: 16px;\n  border-radius: 0px 8px 8px 0px;\n  cursor: pointer;\n  background: linear-gradient(270deg, #1A1D3E 57.29%, #050926 100%);\n}\n\n.close svg {\n  transform: rotate(180deg);\n}\n\n/* ================ SELECT ========== */\n.scan-translator-panel-select-container {\n  position: relative;\n}\n\n.scan-translator-panel-select-container svg {\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  transform: translate(0, -50%);\n}\n\n.scan-translator-panel-select-form {\n  margin-bottom: 16px;\n}\n\n.scan-translator-panel-select-form p {\n  color: white;\n  font-weight: 500;\n  margin-bottom: 8px;\n}\n\n.scan-translator-panel-select-form select {\n  width: 100%;\n  font-size: 14px;\n  font-weight: 400;\n  appearance: none;\n  background: rgba(255, 255, 255, 0.1); \n  padding: 16px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: white;\n  padding: 12px 8px;\n  border-radius: 4px;\n}\n\n.info {\n  font-weight: 510;\n  color: #87899E;\n  display: block;\n  max-width: 256px;\n}\n\n.scan-translator-panel-select-form option {\n  font-size: 14px;\n  font-weight: 400;\n  color: white;\n  background: #2D304B;\n}\n/* ================ SELECT ========== */\n\n</style>\n\n<div class="scan-translator-panel">\n\n<div class="scan-translator-panel-header">\n  <div class="remaining-request-container">\n    <div class="tooltip">\n      <svg class="info-bubble" fill="none" width="20" height="20" viewBox="0 0 22 22" stroke-width="1.5" stroke="currentColor">\n        <path stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" />\n      </svg>\n      <div class="tooltip__content">\n        <p>See your remaining credits <br />reset every week after your first request</p>\n      </div>\n    </div>  \n    <p class="js-remaining-request"></p>\n  </div>\n\n  <div class="tooltip__version">\n    <a class="scan-translator-panel-version-container" href="https://scan-translator.com/blog" target="_blank">\n      <svg width="20" height="20" viewBox="0 0 13 13" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M9.96715 1.3C9.00957 1.3 8.23334 2.0761 8.23334 3.03329C8.23334 3.83981 8.78688 4.51191 9.53334 4.70522V5.63329C9.53334 5.87262 9.33912 6.06658 9.10005 6.06658H4.76676C4.27666 6.06658 3.82985 6.23545 3.46676 6.51014V4.70574C4.21322 4.51191 4.76676 3.83994 4.76676 3.03342C4.76676 2.0761 3.99066 1.3 3.03334 1.3C2.07602 1.3 1.30005 2.0761 1.30005 3.03329C1.30005 3.83981 1.85359 4.51191 2.60005 4.70483V8.29504C1.85359 8.48796 1.30005 9.15993 1.30005 9.96658C1.30005 10.9239 2.07615 11.7 3.03334 11.7C3.99053 11.7 4.76663 10.9239 4.76663 9.96671C4.76663 9.16006 4.21309 8.48809 3.46663 8.29517V8.23329C3.46663 7.5153 4.0489 6.93329 4.76663 6.93329H9.10005C9.81778 6.93329 10.4 6.35141 10.4 5.63329V4.70548C11.1461 4.51204 11.7 3.84007 11.7 3.03329C11.7 2.0761 10.9239 1.3 9.96715 1.3ZM3.90005 9.96671C3.90005 10.4458 3.512 10.8333 3.03334 10.8333C2.55468 10.8333 2.16663 10.4458 2.16663 9.96671C2.16663 9.48805 2.55468 9.1 3.03334 9.1C3.512 9.1 3.90005 9.48805 3.90005 9.96671ZM3.03334 3.9C2.55468 3.9 2.16663 3.51195 2.16663 3.03329C2.16663 2.55463 2.55468 2.16658 3.03334 2.16658C3.512 2.16658 3.90005 2.55476 3.90005 3.03329C3.90005 3.51182 3.512 3.9 3.03334 3.9ZM9.96676 3.9C9.4881 3.9 9.10005 3.51195 9.10005 3.03329C9.10005 2.55463 9.4881 2.16658 9.96676 2.16658C10.4454 2.16658 10.8333 2.55463 10.8333 3.03329C10.8333 3.51195 10.4454 3.9 9.96676 3.9Z" fill="white"/>\n      </svg>\n      \n      <p class="scan-translator-panel-js-version">v.1.0</p>\n    </a>\n    <div class="tooltip__version__content">\n      <p>Click here to see our latest post and the new features we added !</p>\n    </div>\n  </div> \n</div>\n\n<a class="scan-translator-panel-link" target="_blank" href="https://forms.gle/HbJVfWqK5sdCyqLT8">Help us to improve the extension !</a>\n\n<div class="scan-translator-panel-select-form">\n  <p>Translated to</p>\n\n  <div class="scan-translator-panel-select-container">\n    <select class="js-panel-translated-to-select"></select>\n\n    <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M0.937531 3.28129C1.17746 3.28129 1.41742 3.37279 1.60044 3.55585L7.50006 9.45543L13.3996 3.55585C13.7657 3.1897 14.3593 3.1897 14.7254 3.55585C15.0915 3.92196 15.0915 4.51555 14.7254 4.88166L8.16297 11.4442C7.98713 11.62 7.74872 11.7188 7.50006 11.7188C7.25145 11.7188 7.01295 11.62 6.83711 11.4442L0.274624 4.8817C-0.0914869 4.51559 -0.0914869 3.922 0.274624 3.55589C0.457638 3.37279 0.697604 3.28129 0.937531 3.28129Z" fill="white"/>\n    </svg>\n  </div>          \n  </div>\n<div class="scan-translator-panel-radial-gradient"></div>\n\n<button class="scan-translator-panel-btn-toggle js-show-translations">\n<div></div>\n<span>Original (T)</span>\n  <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <g clip-path="url(#clip0_1_688)">\n    <path d="M9.76764 1.63444C9.45824 1.32463 8.95582 1.32482 8.64601 1.63444L3.59787 6.68277L1.35419 4.43911C1.04438 4.1293 0.542174 4.1293 0.23236 4.43911C-0.0774534 4.74893 -0.0774534 5.25113 0.23236 5.56094L3.03684 8.36542C3.19165 8.52023 3.39464 8.59783 3.59765 8.59783C3.80067 8.59783 4.00386 8.52042 4.15867 8.36542L9.76764 2.75625C10.0775 2.44665 10.0775 1.94423 9.76764 1.63444Z" fill="white"/>\n    </g>\n    <defs>\n    <clipPath id="clip0_1_688">\n    <rect width="10" height="10" fill="white"/>\n    </clipPath>\n    </defs>\n  </svg>\n</button>\n\n<button class="scan-translator-panel-btn js-translate-page">\n  Translate (Q)\n</button>\n\n<button class="scan-translator-panel-btn js-translate-all-images">\n  Translate all images <br /> (Use lot of credits, take care)\n</button>\n</div>\n\n<div class="scan-translator-panel-toggle js-panel-toggle">\n<svg width="15" height="15" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M7.81251 0.625005C7.81251 0.784955 7.7515 0.944934 7.62946 1.06694L3.69641 5.00003L7.62946 8.93305C7.87357 9.1771 7.87357 9.57286 7.62946 9.81693C7.38539 10.061 6.98966 10.061 6.74559 9.81693L2.37057 5.44196C2.25337 5.32474 2.1875 5.1658 2.1875 5.00003C2.1875 4.83428 2.25337 4.67528 2.37057 4.55806L6.74556 0.183067C6.98963 -0.0610065 7.38536 -0.0610065 7.62944 0.183067C7.7515 0.305077 7.81251 0.465055 7.81251 0.625005Z" fill="white"/>\n</svg>\n</div>\n',v.appendChild(e)}const n=document.querySelector(".scan-translator-panel-root").shadowRoot,a=n.querySelector(".js-panel-translated-to-select");n.querySelector(".scan-translator-panel-js-version").innerHTML=`v.${g}`,chrome.storage.local.get(["showUpdate","lastVersion","blogUrl"],(e=>{if(e.showUpdate&&(!e.lastVersion||e.lastVersion&&e.lastVersion!==g)){const n=document.querySelector(".scan-translator-panel-root")?.shadowRoot;if(n){const t=n.querySelector(".scan-translator-panel-version-container");t.classList.add("scan-translator--update"),t.href=e.blogUrl,t.addEventListener("click",(()=>{t.classList.remove("scan-translator--update"),chrome.storage.local.set({showUpdate:!1,lastVersion:g})}))}}})),k(),a.options.length||m.forEach((n=>{const t=document.createElement("option");t.value=n.value,t.innerHTML=n.name,n.value===e&&t.setAttribute("selected",!0),a.appendChild(t)}));const o=n.querySelector(".scan-translator-panel-toggle"),s=document.querySelector(".scan-translator-panel-root");s.style.zIndex=t()+1;await R("scanTranslatorOpenPanel")?(o.classList.remove("close"),s.classList.remove("scan-translator-panel--hide")):(s.classList.add("scan-translator-panel--hide"),o.classList.add("close"),s.style.transition="unset",setTimeout((()=>{s.style.transition="transform 600ms ease-in-out"}),500));const r=()=>{const e=document.querySelectorAll(".scan-translator-overlay"),t=n.querySelector(".scan-translator-panel-btn-default");l.classList.toggle("scan-translator-panel-btn-default"),t?e.forEach((e=>{e.style.display="block"})):e.forEach((e=>{e.style.display="none"}))};o.addEventListener("click",(e=>{e.stopImmediatePropagation(),o.classList.contains("close")?(o.classList.remove("close"),s.classList.remove("scan-translator-panel--hide"),chrome.storage.local.set({scanTranslatorOpenPanel:!0})):(s.classList.add("scan-translator-panel--hide"),o.classList.add("close"),chrome.storage.local.set({scanTranslatorOpenPanel:!1}))}));const l=n.querySelector(".js-show-translations");l.addEventListener("click",(e=>{e.stopImmediatePropagation(),r()}));const i=n.querySelector(".js-panel-translated-to-select");i.addEventListener("change",(e=>{e.stopImmediatePropagation(),f=i.value,chrome.storage.local.set({scanTranslatorTargetLangEvent:i.value})}));const c=n.querySelector(".js-translate-page"),d=n.querySelector(".js-translate-all-images");d.addEventListener("click",(e=>{e.stopImmediatePropagation();try{d.classList.add("disable"),I()}catch(e){d.classList.remove("disable")}})),c.addEventListener("click",(e=>{e.stopImmediatePropagation();try{c.classList.add("disable"),A()}catch(e){c.classList.remove("disable")}})),document.addEventListener("keydown",(e=>{if(e.stopImmediatePropagation(),"q"===e.key)try{c.classList.add("disable"),A()}catch(e){c.classList.remove("disable")}"t"===e.key&&r()}))},_=()=>{const e=document.querySelector(".scan-translator-panel-root");e&&e.remove()},k=async e=>{const n=document.querySelector(".scan-translator-panel-root").shadowRoot,t=e||await R("scanTranslatorApiResponse"),a=n.querySelector(".js-remaining-request");a.innerHTML=t?`<p class="js-remaining-request">${t.meta?.ratelimit_remaining??0}/${t.meta?.ratelimit_limit??20}</p>`:'<p class="js-remaining-request">20/20</p>'},q=()=>{const n=window.innerWidth,t=window.innerHeight,a=document.querySelectorAll("img, canvas");for(const o of a){const a=o.getBoundingClientRect();a.top>=0&&a.left>=0&&a.bottom<=t&&a.right<=n&&"canvas"===o.nodeName.toLocaleLowerCase()&&e(p.SITE_NOT_SUPPORTED)}},I=async()=>{q();const n=Array.from(document.querySelectorAll("img")).filter((e=>"none"!==e.style.display&&!e.src.endsWith(".gif")));let t,a=0;for(const o of n){o.src.startsWith("blob:")&&e(p.SITE_NOT_SUPPORTED);const n=o.width*o.height;n>=a&&(a=n,t=o)}!async function(){for(const e of n)if(e.width===t.width){const n=await M(e);await P(e,n)}}()},A=async()=>{if(q(),new URL(window.location).hostname===u.HITOMI){const e=document.querySelector("#comicImages img"),n=await M(e);return void P(e,n)}const n=document.images;let t,a=0;for(const e of n)if(O(e)){const n=e.width*e.height;n>=a&&(a=n,t=e)}if(t){t.src.startsWith("blob:")&&e(p.SITE_NOT_SUPPORTED);const n=await M(t);P(t,n)}return null},M=e=>new Promise((n=>{const t=document.createElement("canvas"),a=t.getContext("2d"),o=new Image;o.crossOrigin="anonymous";o.src="https://corsproxy.io/?"+encodeURIComponent(e.src),o.onload=()=>{t.width=o.width,t.height=o.height,a.drawImage(o,0,0);try{const e=t.toDataURL();n(e)}catch(e){n(null)}},o.onerror=e=>{n(null)}})),O=e=>{if(!window||"none"===e.style.display||e.src.endsWith(".gif"))return;const n=window.document,t=e.getBoundingClientRect();return t.top<=(window.innerHeight||n.documentElement.clientHeight)&&t.left<=(window.innerWidth||n.documentElement.clientWidth)&&t.bottom>=0&&t.right>=0},P=async(a,r)=>{let l,i=null;new URL(window.location).hostname===u.HITOMI&&(i=document.querySelector("#comicImages picture")),i||(i="A"===a.parentNode.tagName?a.parentNode.parentNode:a.parentNode),i.classList.add("scan-translator-overlay-wrapper");const c=document.createElement("div");c.classList.add("scan-translator-overlay-loader"),Object.assign(c.style,{position:"absolute",padding:"10px",top:`${a.offsetTop}px`,left:`${a.offsetLeft}px`,width:`${a.width}px`,height:`${a.height}px`,zIndex:t()+2}),i.appendChild(c);const d=await R("scanTranslatorApiResponse");d?.imageUrl===a.src&&d.data?.translation_languages.includes(f)&&(l=d),i.classList.contains("scan-translator-overlay-wrapper")&&i.querySelector(".scan-translator-overlay")&&d?.imageUrl===a.src&&!d.data?.translation_languages.includes(f)&&i.querySelector(".scan-translator-overlay").remove();const m=l||await U(r||a.src,"https://scan-translator.com/api/translations",r?"base64":"url",a.src);if(m?.statusCode&&!m?.data?.blocks.length||m?.statusCode&&404===m?.statusCode){const t=await R("scanTranslatorApiResponse");t&&(t.meta.ratelimit_remaining=t.meta.ratelimit_remaining-1),chrome.storage.local.set({scanTranslatorApiResponse:t}),n(),k(),e(p.NO_TEXT_FOUND)}if(m?.statusCode&&200!==m?.statusCode&&(n(),e(p.GLOBAL)),m){const e=document.querySelector(".scan-translator-error-message");e&&e.remove();const n=document.createElement("div");n.classList.add("scan-translator-overlay"),Object.assign(n.style,{position:"absolute",padding:"10px",top:`${a.offsetTop}px`,left:`${a.offsetLeft}px`,width:`${a.width}px`,height:`${a.height}px`,zIndex:t()+1}),i.appendChild(n),window.onresize=()=>{N(a,n)};const r=`block_text_${f}`,l=j(a);for(const e of m.data?.blocks)if(e.block_confidence>.45&&!/^0*$/.test(e.block_text_original.trim())&&e[r].length>1){const t=document.createElement("div");t.classList.add("scan-translator-bubble"),Object.assign(t.style,{top:e.block_position.top*l-3+"px",left:e.block_position.left*l-3+"px",width:e.block_size.width*l+"px",height:e.block_size.height*l+"px",minHeight:e.block_size.height*l+"px"});const a=document.createElement("p");a.classList.add("scan-translator-text"),a.style.setProperty("color","black","important"),"TH"===f&&(a.style.fontFamily="Arial"),a.innerHTML=e[r],a.addEventListener("click",(()=>{navigator.clipboard.writeText(e[r]);const n=document.createElement("div");n.innerHTML='\n            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">\n            <path stroke-linecap="round" stroke-linejoin="round" d="M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75" />\n          </svg>\n          ',n.classList.add("scan-translator-copied-icon"),a.appendChild(n),setTimeout((()=>{n.remove()}),800)})),t.appendChild(a),n.appendChild(t)}w?H(w):o({elements:document.querySelectorAll(".scan-translator-text"),step:.5}),document.querySelectorAll(".scan-translator-bubble").forEach((e=>{s(e)}));document.querySelector(".scan-translator-panel-root").style.zIndex=t()+1,k()}n()},H=e=>{document.querySelectorAll(".scan-translator-text").forEach((n=>{n.style.fontSize=`${e}px`}))},U=async(t,a,o,s)=>{try{const r=await fetch(a,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json","license-key":y||await R("licenseKeyLocalStorage"),fingerPrintId:l()},body:JSON.stringify({image:t,target_lang:f,website_url:window.location.href,user_agent:navigator.userAgent,image_type:o})}),i=await r.json();return 429===i.statusCode&&(n(),k(i),e(p.LIMIT_EXCEEDED)),200===r.status&&(k(i),chrome.storage.local.set({scanTranslatorApiResponse:{...i,imageUrl:s}})),i}catch(e){console.log(e)}},j=e=>{const n=e.naturalWidth;return e.offsetWidth/n},R=async function(e){return new Promise((n=>{chrome.storage.local.get(e,(function(t){n(t[e])}))}))},N=(e,n)=>{Object.assign(n.style,{top:`${e.offsetTop}px`,left:`${e.offsetLeft}px`})};window.addEventListener("DOMContentLoaded",b),chrome.runtime.onMessage.addListener(x)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
