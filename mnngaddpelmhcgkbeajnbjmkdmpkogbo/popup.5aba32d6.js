const e="https://scan-translator.com/api",a=document.querySelector(".js-translate-page"),n=document.querySelector(".js-show-panel"),t=document.querySelector(".js-enable-font-size"),s=document.querySelector(".js-custom-font-size"),l=document.querySelector(".js-translated-to-select"),o=document.querySelector(".js-contact-us-form"),r=document.querySelector(".js-save-token-form"),i=document.querySelector(".js-save-token-input"),c=document.querySelector(".js-save-token-button"),u=document.querySelector(".js-contact-us-btn"),m=document.querySelector(".js-remaining-request"),d=document.querySelectorAll("main"),v=document.querySelectorAll(".tab");[...Array(29)].map(((e,a)=>a+9)).forEach((e=>{const a=document.createElement("option");a.value=e.valueOf(),a.innerHTML=e,16===e&&a.setAttribute("selected",!0),s.appendChild(a)})),[{name:"Albanian",value:"SQ"},{name:"Arabic",value:"AR"},{name:"Armenian",value:"HY"},{name:"Belarusian",value:"BE"},{name:"Bosnian",value:"BS"},{name:"Bulgarian",value:"BG"},{name:"Burmese",value:"MY"},{name:"Chinese (simplified)",value:"ZH"},{name:"Croatian",value:"HR"},{name:"Czech",value:"CS"},{name:"Danish",value:"DA"},{name:"Dutch",value:"NL"},{name:"English (American)",value:"EN-US"},{name:"English (British)",value:"EN-GB"},{name:"Estonian",value:"ET"},{name:"Finnish",value:"FI"},{name:"French",value:"FR"},{name:"Georgian",value:"KA"},{name:"German",value:"DE"},{name:"Greek",value:"EL"},{name:"Hebrew",value:"HE"},{name:"Hindi",value:"HI"},{name:"Hungarian",value:"HU"},{name:"Icelandic",value:"IS"},{name:"Indonesian",value:"ID"},{name:"Italian",value:"IT"},{name:"Japanese",value:"JA"},{name:"Korean",value:"KO"},{name:"Kurdish",value:"KU"},{name:"Lao",value:"LO"},{name:"Latvian",value:"LV"},{name:"Lithuanian",value:"LT"},{name:"Luxembourgish",value:"LB"},{name:"Macedonian",value:"MK"},{name:"Malagasy",value:"MG"},{name:"Malay",value:"MS"},{name:"Maltese",value:"MT"},{name:"Mongolian",value:"MN"},{name:"Nepali",value:"NE"},{name:"Norwegian",value:"NO"},{name:"Persian",value:"FA"},{name:"Polish",value:"PL"},{name:"Portuguese (Brazilian)",value:"PT-BR"},{name:"Portuguese (excluding Brazilian)",value:"PT-PT"},{name:"Romanian",value:"RO"},{name:"Russian",value:"RU"},{name:"Slovak",value:"SK"},{name:"Slovenian",value:"SL"},{name:"Somali",value:"SO"},{name:"Spanish",value:"ES"},{name:"Sundanese",value:"SU"},{name:"Swedish",value:"SV"},{name:"Thai",value:"TH"},{name:"Turkish",value:"TR"},{name:"Turkmen",value:"TK"},{name:"Ukrainian",value:"UK"},{name:"Uzbek",value:"UZ"},{name:"Vietnamese",value:"VI"},{name:"Welsh",value:"CY"},{name:"Yiddish",value:"YI"}].forEach((e=>{const a=document.createElement("option");a.value=e.value,a.innerHTML=e.name,"EN-US"===e.value&&a.setAttribute("selected",!0),l.appendChild(a)})),chrome.storage.local.get(["scanTranslatorPanelEvent","licenseKeyPopupEvent","scanTranslatorTargetLangEvent","scanTranslatorApiResponse","scanTranslatorEnableCustomFontSize","scanTranslatorCustomFontSize"],(({scanTranslatorPanelEvent:e,licenseKeyPopupEvent:a,scanTranslatorTargetLangEvent:o,scanTranslatorApiResponse:r,scanTranslatorEnableCustomFontSize:u,scanTranslatorCustomFontSize:d})=>{u&&(t.checked=!0,s.disabled=!1,s.classList.remove("disabled")),"show"===e&&(n.checked=!0),a&&(i.value=a,i.classList.add("disabled"),i.disabled=!0,c.value="Update your license"),o&&(l.value=o),u&&d&&(s.value=d),m.innerHTML=r?`<p class="js-remaining-request">${r.meta?.ratelimit_remaining??0}/${r.meta?.ratelimit_limit??20}</p>`:'<p class="js-remaining-request">20/20</p>'}));window.addEventListener("DOMContentLoaded",(async()=>{chrome.tabs.query({active:!0,currentWindow:!0},(async g=>{const[h]=g;chrome.storage.local.set({activeTabId:h.id}),n.checked&&chrome.tabs.sendMessage(h.id,{scanTranslatorTargetLangEvent:l.value}),t.checked&&chrome.tabs.sendMessage(h.id,{scanTranslatorEnableCustomFontSize:!0,scanTranslatorCustomFontSize:s.value}),l.addEventListener("change",(()=>{chrome.storage.local.set({scanTranslatorTargetLangEvent:l.value}),chrome.tabs.sendMessage(h.id,{scanTranslatorTargetLangEvent:l.value})})),s.addEventListener("change",(()=>{chrome.storage.local.set({scanTranslatorCustomFontSize:s.value}),chrome.tabs.sendMessage(h.id,{scanTranslatorCustomFontSize:s.value})})),n.addEventListener("change",(e=>{const a=e.target.checked,n=a?"show":"hide";chrome.storage.local.set({scanTranslatorPanelEvent:n,scanTranslatorOpenPanel:a}),chrome.tabs.sendMessage(h.id,{scanTranslatorPanelEvent:n,scanTranslatorTargetLangEvent:l.value})})),t.addEventListener("change",(e=>{const a=e.target.checked;a?(s.disabled=!1,s.classList.remove("disabled")):(s.disabled=!0,s.classList.add("disabled")),chrome.storage.local.set({scanTranslatorEnableCustomFontSize:a,scanTranslatorCustomFontSize:s.value}),chrome.tabs.sendMessage(h.id,{scanTranslatorEnableCustomFontSize:a,scanTranslatorCustomFontSize:s.value})})),r.addEventListener("submit",(a=>{a.preventDefault(),i.value&&"Update your license"===c.value?(i.disabled=!1,i.classList.remove("disabled"),c.value="Save"):i.value&&"Save"===c.value&&(c.value="License saved!",i.disabled=!0,i.classList.add("disabled"),(async a=>{const n=document.createElement("p");n.classList.add("js-message-save-token");try{const t=await fetch(`${e}/users`,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({license_key:a})}),s=await t.json();if(404===s.statusCode||500===s.statusCode)throw n.innerHTML=s.message,Object.assign(n.style,{color:"red",fontSize:"18px",marginBottom:"16px"}),m.innerHTML='<p class="js-remaining-request">20/20</p>',chrome.storage.local.set({scanTranslatorApiResponse:{meta:{ratelimit_remaining:20,ratelimit_limit:20}}}),r.appendChild(n),setTimeout((()=>{n.remove()}),3e3),s.message;n.innerHTML="Your credits have been updated!",Object.assign(n.style,{color:"green",fontSize:"18px",marginBottom:"16px"}),r.appendChild(n),setTimeout((()=>{n.remove()}),3e3),m.innerHTML=`<p class="js-remaining-request">${s.ratelimit_remaining}/${s.ratelimit_limit}</p>`,chrome.storage.local.set({scanTranslatorApiResponse:{meta:{ratelimit_remaining:s.ratelimit_remaining,ratelimit_limit:s.ratelimit_limit}}})}catch(e){console.log(e)}})(i.value),setTimeout((()=>{c.value="Update your license"}),1500)),i.value&&(chrome.storage.local.set({licenseKeyPopupEvent:i.value}),chrome.tabs.sendMessage(h.id,{licenseKeyPopupEvent:i.value}))})),o.addEventListener("submit",(async a=>{a.preventDefault();const n=document.querySelector(".js-contact-us-message"),t=document.querySelector(".js-error-message-contact-form");if(t&&t.remove(),n.value)try{const a=await fetch(`${e}/contactMessages`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({message:n.value,website_url:h.url}),cache:"default"}),t=await a.json();if(404===t.statusCode||500===t.statusCode){const e=document.createElement("p");throw e.classList.add("js-error-message-contact-form"),e.innerHTML=t.message,Object.assign(e.style,{color:"red",fontSize:"18px",marginBottom:"16px"}),o.appendChild(e),t.message}n.value="",u.value="Sent!",setTimeout((()=>{u.value="Contact us"}),2e3)}catch(e){console.log(e)}})),a.addEventListener("click",(()=>{chrome.storage.local.set({scanTranslatorPanelEvent:"show",scanTranslatorOpenPanel:!0}),chrome.tabs.sendMessage(h.id,{scanTranslatorTranslatePageEvent:!0,scanTranslatorPanelEvent:"show",licenseKeyPopupEvent:i.value}),window.close()})),v[0].classList.add("active-tab"),d[0].classList.add("active-main"),v.forEach(((e,a)=>{e.addEventListener("click",(()=>{d.forEach(((e,a)=>{e.classList.remove("active-main"),v[a].classList.remove("active-tab")})),v[a].classList.add("active-tab"),d[a].classList.add("active-main")}))}))}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
